name: Build tonlib Linux

on:
  push:
    branches:
    - develop-tonlib

jobs:
  build:

    runs-on: debian-buster
    
    steps:
      - name: Check out source code
        uses: actions/checkout@master
        
      - name: Fetch TON repo
        run: |
          cd ..
          git clone --recursive https://github.com/newton-blockchain/ton
        
      - name: Build tonlibjson
        run: |
          cd ..
          mkdir build
          cd build
          cmake ../ton -DCMAKE_BUILD_TYPE=Release
          cmake --build . --target tonlibjson
          
      - name: Copy built lib
        run: |
          cp ../build/tonlib/libtonlib* v2/lib/linux

      - name: Test build
        env:
          LD_LIBRARY_PATH: "../linux"
        run: |
          cd v2/lib/test
          mkdir test.keys
          go run libtest.go
          rm -rf test.keys
      - name: Commit updated Linux tonlib files
        env:
         GITHUB_TOKEN: ${{ secrets.github_token }}
         COMMIT_MSG: |
           Update Linux tonlib
        run: |
          # Hard-code user configuration
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"
          # Update origin with token
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
          # Checkout the branch so we can push back to it
          git checkout develop-tonlib
          git pull
          git add .
          # Only commit and push if we have changes
          git diff --quiet && git diff --staged --quiet || (git commit -m "${COMMIT_MSG}"; git push origin develop-tonlib)
